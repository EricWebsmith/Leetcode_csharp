namespace Leetcode0240;

public class Solution
{

    public bool SearchMatrix(int[][] matrix, int target)
    {
        int m = matrix.Length;
        int n = matrix[0].Length;
        int x = n - 1;
        int y = 0;
        while(x>=0 && x<n && y>=0 && y < m)
        {
            if (matrix[y][x] == target)
            {
                return true;
            }
            else if(matrix[y][x] > target)
            {
                x--;
            }
            else
            {
                y++;
            }
        }
        return false;
    }
}

[TestClass]
public class SolutionTest
{
    [DataRow(1, "[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]", 5, true)]
    [DataRow(2, "[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]", 20, false)]
    [DataRow(3, "[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]", 21, true)]
    [DataRow(4, "[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]", 22, true)]
    [DataRow(5, "[[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]]", 23, true)]
    [DataRow(6, "[[1]]", 1, true)]
    [DataRow(7, "[[1]]", 2, false)]
    [DataRow(8, "[[-30,-15,-12],[-25,-11,-9],[-20,-9,-1]]", -9, true)]
    [DataRow(9, "[[-30,-15,-12],[-25,-11,-9],[-20,0,1]]", -9, true)]
    [DataRow(10, "[[1,4],[2,5]]", 1, true)]
    [DataRow(11, "[[1,4],[2,5]]", -1, false)]
    [DataRow(12, "[[1,4],[2,5]]", 8, false)]
    [DataRow(13, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 15, true)]
    [DataRow(14, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 1, true)]
    [DataRow(15, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 2, true)]
    [DataRow(16, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 5, true)]
    [DataRow(17, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 10, true)]
    [DataRow(18, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 25, true)]
    [DataRow(19, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 35, false)]
    [DataRow(20, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", 45, false)]
    [DataRow(21, "[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15],[16,17,18,19,20],[21,22,23,24,25]]", -5, false)]
    [DataTestMethod]
    public void Test(int order, string matrixStr, int target, bool expected)
    {
        int[][] matrix = Helper.Convert2D(matrixStr);
        bool actual = (new Solution()).SearchMatrix(matrix, target);
        Assert.AreEqual(expected, actual);
    }
}